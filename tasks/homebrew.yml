---
- name: Setup homebrew install path.
  file:
    path: "{{ homebrew_install_path }}"
    group: admin
    mode: 0775
    state: directory
  become: yes

- name: Ensure proper permissions on /usr/local dirs.
  file:
    path: "{{ item }}"
    group: admin
    mode: 0775
  with_items:
    - "/usr/local"
    - "/usr/local/bin"
  become: yes

- name: Ensure homebrew is installed.
  git:
    repo: https://github.com/Homebrew/homebrew.git
    version: master
    dest: "{{ homebrew_install_path }}"
    update: no
    accept_hostkey: yes
  become: yes

- name: Check if homebrew binary is already in place.
  stat: path=/usr/local/bin/brew
  register: homebrew_binary

- name: Symlink brew to /usr/local/bin/brew.
  file:
    src: "{{ homebrew_install_path }}/bin/brew"
    dest: /usr/local/bin/brew
    state: link
  when: homebrew_binary.stat.exists == false
  become: yes

- name: Check for installed homebrew apps
  shell: brew list | grep {{ item }}
  register: installed_brews
  with_items: homebrew_installed_apps
  always_run: yes
  ignore_errors: true

- name: Install homebrew packages
  homebrew: name={{ item }} state=latest
  with_items: homebrew_installed_apps
  when: item not in installed_brews.results | map(attribute='stdout')

- name: Check for installed homebrew taps
  shell: brew tap | grep {{ item }}
  register: installed_taps
  with_items: homebrew_taps
  always_run: yes
  ignore_errors: true

- name: Install taps
  homebrew_tap: tap={{ item }} state=present
  with_items: homebrew_taps
  when: item not in installed_taps.results | map(attribute='stdout')

- name: Check for installed cask apps
  shell: brew cask list | grep {{ item }}
  register: installed_casks
  always_run: yes
  with_items: homebrew_cask_apps
  ignore_errors: true

- name: Install cask packages
  homebrew_cask: name={{ item }} state=installed
  with_items: homebrew_cask_apps
  when: item not in installed_casks.results | map(attribute='stdout')

